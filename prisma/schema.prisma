datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 Int  @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user               User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int   @id @default(autoincrement())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime @default(now())
  accounts      Account[]
  sessions      Session[]
  diaries       Diary[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Diary{
  id          Int         @id @default(autoincrement())
  title       String
  weather     String
  content     String
  imageUrl    String?     // 이미지를 저장할 URL
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt      // 수정 시 자동 갱신
  userId      String
  nickname    String
  user        User        @relation(fields: [userId], references: [id])
  aiResponse  AIResponse? @relation("DiaryToAIResponse") // AIResponse와의 관계 설정
}

model AIResponse {
  id          Int         @id @default(autoincrement())
  content     String
  createdAt   DateTime    @default(now()) // 생성 시 자동 설정
  diaryId     Int         @unique  // 1:1 관계를 위해 고유 설정
  diary       Diary       @relation("DiaryToAIResponse", fields: [diaryId], references: [id])
}
